{
    "name": "reprompt",
    "displayName": "Reprompt",
    "description": "Optimize and enhance prompts using the Perplexity Sonar API.",
    "version": "0.8.0",
    "publisher": "kwesinavilot",
    "author": {
        "name": "Kwesinavilot",
        "url": "https://github.com/kwesinavilot"
    },
    "icon": "images/icon.png",
    "license": "MIT",
    "pricing": "Free",
    "repository": {
        "type": "git",
        "url": "https://github.com/kwesinavilot/reprompt-ext"
    },
    "homepage": "https://github.com/kwesinavilot/reprompt-ext",
    "engines": {
        "vscode": "^1.85.0",
        "node": ">=18.0.0"
    },
    "categories": [
        "Other",
        "Programming Languages",
        "AI",
        "Machine Learning"
    ],
    "keywords": [
        "vscode",
        "extension",
        "reprompt",
        "perplexity",
        "sonar",
        "ai",
        "machine learning",
        "prompt",
        "optimization",
        "code",
        "prompt engineering",
        "prompt optimization",
        "prompt improvement"
    ],
    "main": "./out/extension.js",
    "activationEvents": [
        "onCommand:reprompt.optimize",
        "onCommand:reprompt.runSonar"
    ],
    "contributes": {
        "commands": [
            {
                "command": "reprompt.optimize",
                "title": "Reprompt: Transform Prompt"
            },
            {
                "command": "reprompt.runSonar",
                "title": "Reprompt: Run with Sonar"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command": "reprompt.optimize",
                    "when": "resourceExtname == .md || resourceExtname == .reprompt || resourceExtname == .prompt || resourceExtname == .cursor",
                    "group": "navigation"
                },
                {
                    "command": "reprompt.runSonar",
                    "when": "resourceExtname == .md || resourceExtname == .reprompt || resourceExtname == .prompt || resourceExtname == .cursor",
                    "group": "navigation"
                }
            ],
            "commandPalette": [
                {
                    "command": "reprompt.optimize",
                    "when": "editorTextFocus"
                },
                {
                    "command": "reprompt.runSonar",
                    "when": "editorTextFocus"
                }
            ]
        },
        "keybindings": [
            {
                "command": "reprompt.optimize",
                "key": "ctrl+shift+o",
                "when": "editorTextFocus"
            },
            {
                "command": "reprompt.runSonar",
                "key": "ctrl+shift+r",
                "when": "editorTextFocus"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Reprompt",
            "properties": {
                "reprompt.sonarApiKey": {
                    "type": "string",
                    "description": "Perplexity Sonar API key."
                },
                "reprompt.showTransformationStats": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show detailed statistics after prompt transformation"
                },
                "reprompt.inferProjectStack": {
                    "type": "boolean",
                    "default": true,
                    "description": "Infer project stack from workspace config files and include in prompt transformation"
                },
                "reprompt.sonarModel": {
                    "type": "string",
                    "default": "sonar",
                    "enum": [
                        "sonar-pro",
                        "sonar",
                        "sonar-deep-research",
                        "sonar-reasoning-pro",
                        "sonar-reasoning",
                        "r1-1776"
                    ],
                    "enumDescriptions": [
                        "Advanced search offering with grounding, ideal for complex queries and follow-ups.",
                        "Lightweight, cost-effective search model with grounding, ideal for general search tasks.",
                        "Expert-level research model conducting exhaustive searches and generating comprehensive reports, ideal for in-depth analysis.",
                        "Premier reasoning offering powered by DeepSeek R1 with Chain of Thought (CoT), ideal for complex, multi-step tasks.",
                        "Fast, real-time reasoning model designed for quick problem-solving with search, ideal for quick problem-solving.",
                        "A version of DeepSeek R1 post-trained for uncensored, unbiased, and factual information, ideal for offline use."
                    ],
                    "description": "Choose the Sonar model to use for prompt execution and transformation."
                },
                "reprompt.sonarSearchContextSize": {
                    "type": "string",
                    "default": "medium",
                    "enum": ["low", "medium", "high"],
                    "enumDescriptions": [
                        "Best for short factual queries or when operating under strict token cost constraints.",
                        "The default and best suited for general use cases.",
                        "Use for deep research, exploratory questions, or when citations and evidence coverage are critical."
                    ],
                    "description": "Controls how much search context is retrieved from the web. 'low' is cost-efficient, 'medium' is balanced, 'high' is most comprehensive but more expensive."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "lint": "eslint src --ext ts",
        "format": "prettier --write src",
        "package": "vsce package",
        "publish": "vsce publish"
    },
    "devDependencies": {
        "@types/node": "^20.x",
        "@types/vscode": "^1.85.0",
        "@typescript-eslint/eslint-plugin": "^6.15.0",
        "@typescript-eslint/parser": "^6.15.0",
        "@vscode/test-electron": "^2.3.8",
        "eslint": "^8.56.0",
        "prettier": "^2.0.0",
        "typescript": "^5.3.3",
        "vsce": "^2.0.0"
    },
    "dependencies": {
        "node-fetch": "^2.7.0"
    }
}